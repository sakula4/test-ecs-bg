name: Deploy Infrastructure

on:
  push:
    branches:
      - main



env:
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    TF_ACTION_WORKING_DIR: '.'
    AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    TF_VAR_traffic_distribution: "blue-90"


jobs:
  tf_fmt:
    name: Deploy Site
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: get-ssh-private-key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          name: id_rsa
          known_hosts: ${{ secrets.KNOWN_HOSTS }}

      - name: Download artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          name: deploy-state
          path: .

      - name: Save artifact value to env
        run: echo "current=$( cat deploy-state.txt )" >> $GITHUB_ENV

      - name: test if key exists
        run: echo ${{ env.current }}      

      # - name: Terraform Version
      #   run: terraform version

      # - name: Terraform Init
      #   run: terraform init


      # - name: Terraform Validate
      #   run: terraform validate

      # - name: Terraform Plan
      #   run: terraform plan

      # - name: Terraform Apply with 10% traffic to new env
      #   run: sleep 30 && terraform apply --auto-approve --var "traffic_distribution=blue-90"

      # - name: Terraform Apply with 50% traffic to new env
      #   run: sleep 90 && terraform apply --auto-approve --var "traffic_distribution=split"

      # - name: Terraform Apply with 90% traffic to new env
      #   run: sleep 90 && terraform apply --auto-approve --var "traffic_distribution=green-90"

      # - name: Terraform Apply with all traffic to new env
      #   run: sleep 90 && terraform apply --auto-approve --var "traffic_distribution=green"

      - name: Set environment variable
        run: echo "current=blue" >> $GITHUB_ENV

      - name: test value
        run: echo ${{ env.current }}

      - name: export artifact
        run: |
          echo ${{ env.current }} > deploy-state.txt

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: deploy-state
          path: deploy-state.txt
